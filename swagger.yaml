swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Autodealer"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "autodealer.swagger.io"
basePath: "/v2"
tags:
- name: "auto"
  description: "Everything about auto"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "employee"
  description: "Everything about dealer employees"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "dealer"
  description: "Access to dealer autos and employees"
schemes:
- "https"
- "http"
paths:
  /auto:
    post:
      tags:
      - "auto"
      summary: "Add a new auto to the dealer"
      description: ""
      operationId: "addAuto"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Auto object that needs to be added to the autodealer"
        required: true
        schema:
          $ref: "#/definitions/Auto"
      responses:
        "405":
          description: "Invalid input"
      security:
      - autodealer_auth:
        - "write:autos"
        - "read:autos"
    put:
      tags:
      - "auto"
      summary: "Update an existing auto"
      description: ""
      operationId: "updateAuto"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Auto object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Auto"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Auto not found"
        "405":
          description: "Validation exception"
      security:
      - autodealer_auth:
        - "write:autos"
        - "read:autos"
  /auto/{autoId}:
    get:
      tags:
      - "auto"
      summary: "Find auto by ID"
      description: "Returns a single auto"
      operationId: "getAutoById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "autoId"
        in: "path"
        description: "ID of auto to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Auto"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Auto not found"
      security:
      - api_key: []
    delete:
      tags:
      - "auto"
      summary: "Deletes a auto"
      description: ""
      operationId: "deleteAuto"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "autoId"
        in: "path"
        description: "Auto id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Auto not found"
      security:
      - autodealer_auth:
        - "write:autos"
        - "read:autos"
  /employee:
    post:
      tags:
      - "employee"
      summary: "Add a new employee to the dealer"
      description: ""
      operationId: "addEmployee"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Employee object that needs to be added to the autodealer"
        required: true
        schema:
          $ref: "#/definitions/Employee"
      responses:
        "405":
          description: "Invalid input"
      security:
      - autodealer_auth:
        - "write:employees"
        - "read:employees"
    put:
      tags:
      - "employee"
      summary: "Update an existing auto"
      description: ""
      operationId: "updateEmployee"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Employee object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Employee"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
        "405":
          description: "Validation exception"
      security:
      - autodealer_auth:
        - "write:employees"
        - "read:employees"
  /employee/{employeeId}:
    get:
      tags:
      - "employee"
      summary: "Find employee by ID"
      description: "Returns a single employee"
      operationId: "getEmployeeById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "employeeId"
        in: "path"
        description: "ID of employee to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Employee"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
      security:
      - api_key: []
    delete:
      tags:
      - "employee"
      summary: "Deletes a employee"
      description: ""
      operationId: "deleteEmployee"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "employeeId"
        in: "path"
        description: "Employee id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
      security:
      - autodealer_auth:
        - "write:employees"
        - "read:employees"
  /dealer/autos:
    get:
      tags:
      - "dealer"
      summary: "Returns all autos"
      description: "Returns a collection of autos"
      operationId: "getAutos"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      security:
      - api_key: []
  /dealer/employees:
    get:
      tags:
      - "dealer"
      summary: "Returns all employees"
      description: "Returns a collection of employees"
      operationId: "getEmployees"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      security:
      - api_key: []
securityDefinitions:
  autodealer_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:autos: "modify auto in your account"
      read:autos: "read your auto"
      write:employees: "modify employee in your account"
      read:employees: "read employee"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Employee:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
    xml:
      name: "Employee"
  Auto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      maker:
        type: "string"
      model:
        type: "string"
      year:
        type: "integer"
        format: "int64"
    xml:
      name: "Auto"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"